version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: America/Sao_Paulo
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      TZ: America/Sao_Paulo
    ports:
      - "127.0.0.1:8085:8085"
    depends_on:
      - postgres
    networks:
      - backend

  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JAVA_OPTS: "-Xms256m -Xmx256m"
      TZ: America/Sao_Paulo
    depends_on:
      - postgres
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gmonteiro-api.rule=Host(`gmonteiro.fvox.com.br`)"
      - "traefik.http.routers.gmonteiro-api.entrypoints=websecure"
      - "traefik.http.routers.gmonteiro-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.gmonteiro-api.loadbalancer.server.port=8080"
    networks:
      - backend
      - traefik-net

  traefik:
    image: traefik:v3.0.3
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=traefik-net"
      - "--core.defaultRuleSyntax=v2"
      - "--log.level=info"
      - "--accesslog=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--entryPoints.ping.address=:8082"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@fvox.com.br"
      - "--certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json"
      - "--global.checkNewVersion=true"
      - "--global.sendAnonymousUsage=false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/etc/traefik/acme
    networks:
      - traefik-net
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

volumes:
  pgdata:

networks:
  backend:
  traefik-net:
    driver: bridge